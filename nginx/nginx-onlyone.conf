##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server_tokens off;

# Default server configuration
#
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        root /usr/share/nginx/html;
        location / {
                try_files $uri $uri/ /index.html;
        }
}


# Virtual Host configuration for api
server {

	server_name api.<domain_name_here>;
	location / {
		proxy_pass http://127.0.0.1:8000;
	}


    listen 443 ssl; # managed by Certbot
    
    # managed by Certbot

}

# Force https for api
server {
    if ($host = api.<domain_name_here>) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name <domain_name_here>;
    listen 80;
    return 404; # managed by Certbot
}


# Virtual Host configuration for webhook
server {

	server_name webhook.<domain_name_here>;

	location / {	
		proxy_pass http://unix:/run/gunicorn.sock;
	}

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    # managed by Certbot

}

# Virtual Host configuration for frontend
server {

	server_name onlyone.<domain_name_here>;

	location / {
        	proxy_pass http://127.0.0.1:8888;
	}

    # managed by Certbot

}

# Forcre https for frontend
server {
    if ($host = <domain_name_here>) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80;
	listen [::]:80;

	server_name <domain_name_here>;
    return 404; # managed by Certbot

}



